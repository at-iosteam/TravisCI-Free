fastlane_version '1.53.0'

default_platform :ios

scheme_name = 'TravisCI'
project_name = 'TravisCI'
bundle_id = 'com.dhs.dev'
provisioning_profile = ''

platform :ios do
  lane :beta do
    add_keychain if is_ci?

    gym(
      scheme: scheme_name,
      output_name: "#{project_name}.ipa",
      use_legacy_build_api: true,
      export_method: '',
      xcargs: xcodebuild_args
    )

    if is_ci?
      Helper.log.info 'Save Artifacts'
      sh "cp #{lane_context[SharedValues::IPA_OUTPUT_PATH]} $CIRCLE_ARTIFACTS"
    end

    remove_keychain if is_ci?
  end

  desc 'Analyze codes'
  desc 'This may comment to pull request'
  lane :analyze do
    create_lint_config
    swiftlint(
      output_file: 'swiftlint.result.json',
      config_file: '.swiftlint-ci.yml'
    )

    sh 'cp ../swiftlint.result.json $CIRCLE_ARTIFACTS/'

    sh <<-EOS
cd ../;
cat swiftlint.result.json \
    | swiftlint_translate_checkstyle_format translate \
    | checkstyle_filter-git diff origin/master \
    | saddler report --require saddler/reporter/github --reporter #{reporter}
    EOS

    delete_lint_config
  end

  private_lane :create_lint_config do
    File.delete('../.swiftlint-ci.yml') if File.exist?('../.swiftlint-ci.yml')
    require 'yaml'
    config = YAML.load_file('../.swiftlint.yml')
    config['reporter'] = 'json'
    open('../.swiftlint-ci.yml', 'w') do |file|
      YAML.dump(config, file)
    end
  end

  private_lane :delete_lint_config do
    File.delete('../.swiftlint-ci.yml')
  end

  def reporter
    if ENV['CI_PULL_REQUEST'].nil? || ENV['CI_PULL_REQUEST'].empty?
      'Saddler::Reporter::Github::CommitReviewComment'
    else
      'Saddler::Reporter::Github::PullRequestReviewComment'
    end
  end
end
